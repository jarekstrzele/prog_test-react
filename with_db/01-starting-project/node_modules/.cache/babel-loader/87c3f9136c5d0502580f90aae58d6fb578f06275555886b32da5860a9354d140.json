{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaros\\\\Desktop\\\\Prog\\\\prog_test-react\\\\with_db\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { logDOM } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, []);\n  fetchMoviesHandler;\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://swapi.dev/api/films/');\n      if (!response.ok) {\n        throw new Error('SOmthing went wrong');\n      }\n      const data = await response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 46\n      }, this), !isLoading && movies.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Found no movies. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 58\n      }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 34\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gvvaxtNEH69eVRFSOgl7uh+ZsGU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MoviesList","logDOM","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","length"],"sources":["C:/Users/jaros/Desktop/Prog/prog_test-react/with_db/01-starting-project/src/App.js"],"sourcesContent":["import React, { useState , useEffect } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { logDOM } from '@testing-library/react';\n\nfunction App() {\n  const[movies, setMovies] = useState([])\n  const[isLoading, setIsLoading] = useState(false)\n  const[error, setError] = useState(null);\n\n  \n  useEffect( () => {\n    fetchMoviesHandler();\n  }, []) ;\n  fetchMoviesHandler\n  async function fetchMoviesHandler(){\n    setIsLoading(true) ;\n    setError(null);\n    try{\n      const response = await fetch('https://swapi.dev/api/films/') ;\n      if(!response.ok) {\n        throw new Error('SOmthing went wrong')\n      }\n\n      const data = await response.json() ;\n\n     \n      const transformedMovies = data.results.map( movieData => {\n            return {\n              id: movieData.episode_id,\n              title: movieData.title,\n              openingText: movieData.opening_crawl,\n              releaseDate: movieData.release_date\n            } ;\n          }) ;\n\n          setMovies(transformedMovies);\n          setIsLoading(false)\n        }\n      catch(error){\n        setError(error.message) ;\n        setIsLoading(false) ;\n    } \n\n    }\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        { !isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        { !isLoading && movies.length === 0 && !error && <p> Found no movies. </p> }\n        { !isLoading && error && <p> {error}</p> }\n        {isLoading && <p>Loading ...</p>}\n       \n\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AAEnD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAClB,SAASC,MAAM,QAAQ,wBAAwB;AAAC;AAEhD,SAASC,GAAG,GAAG;EAAA;EACb,MAAK,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAK,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAChD,MAAK,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAGvCC,SAAS,CAAE,MAAM;IACfU,kBAAkB,EAAE;EACtB,CAAC,EAAE,EAAE,CAAC;EACNA,kBAAkB;EAClB,eAAeA,kBAAkB,GAAE;IACjCH,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAG;MACD,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC5D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAE;QACf,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;MACxC;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAGlC,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAI;QACnD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UAAU;UACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;UACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;UACpCC,WAAW,EAAEN,SAAS,CAACO;QACzB,CAAC;MACH,CAAC,CAAC;MAEFtB,SAAS,CAACY,iBAAiB,CAAC;MAC5BV,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CACH,OAAMC,KAAK,EAAC;MACVC,QAAQ,CAACD,KAAK,CAACoB,OAAO,CAAC;MACvBrB,YAAY,CAAC,KAAK,CAAC;IACvB;EAEA;EACF,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb;MAAA,uBACE;QAAQ,OAAO,EAAEG,kBAAmB;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAClD,eACV;MAAA,WACI,CAACJ,SAAS,IAAIF,MAAM,CAACyB,MAAM,GAAG,CAAC,iBAAI,QAAC,UAAU;QAAC,MAAM,EAAEzB;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,EACjE,CAACE,SAAS,IAAIF,MAAM,CAACyB,MAAM,KAAK,CAAC,IAAI,CAACrB,KAAK,iBAAI;QAAA,UAAG;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAI,EACxE,CAACF,SAAS,IAAIE,KAAK,iBAAI;QAAA,WAAG,GAAC,EAACA,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,EACvCF,SAAS,iBAAI;QAAA,UAAG;MAAW;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAGxB;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAErB;AAAC,GAvDQH,GAAG;AAAA,KAAHA,GAAG;AAyDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}